Para todas as questões, utilize os LEDs e/ou os botões da placa Launchpad do MSP430.

1.Escreva um código em C que pisca os LEDs ininterruptamente.

#include <msp430g2553.h>
  int main(void){
  
    WDTCTL = WDTPW + WDTHOLD;
    P1OUT = 0;
    P1DIR = BIT0 + BIT1;
    
    while(1){
     P1OUT ^= BIT0 + BIT1;
     }
     return 0;
  }

2.Escreva um código em C que pisca os LEDs ininterruptamente. No ciclo que pisca os LEDs, o tempo que os LEDs ficam ligados deve ser duas 
vezes maior do que o tempo que eles ficam desligados.

#include <msp430g2553.h>
  int main(void){
  
    WDTCTL = WDTPW + WDTHOLD;
    P1OUT = 0;
    P1DIR = BIT0 + BIT1;
    
    while(1){
      P1OUT |= BIT0 + BIT1;
      __delay_cycles(100000);
      P1OUT &=~BIT0 + BIT1;
      __delay_cycles(50000);
     }
     return 0;
  }


3.Escreva um código em C que acende os LEDs quando o botão é pressionado.

 #include <msp430g2553.h>
  int main(void){
  
    WDTCTL = WDTPW + WDTHOLD;
    P1OUT = 0;
    P1DIR = BIT0 + BIT1;
    
    while(1){
      P1OUT |= BIT0 + BIT1;
      __delay_cycles(100000);
      P1OUT &=~BIT0 + BIT1;
      __delay_cycles(50000);
     }
     return 0;
  }


4.Escreva um código em C que pisca os LEDs ininterruptamente somente se o botão for pressionado.

#include <msp430g2553.h>
  int main(void){
  
    WDTCTL = WDTPW + WDTHOLD;
    P1OUT = 0;
    P1DIR = BIT0 + BIT1;
   
   while(1){
   if(P1IN & BIT3 ==0)
    P1OUT |= BIT0 + BIT1;
   else
     P1OUT &=~ BIT0 + BIT1;
   }  
     return 0;
  }


5.Escreva um código em C que acende os LEDs quando o botão é pressionado. Deixe o MSP430 em modo de baixo consumo, e habilite a interrupção
do botão.

